[{"D:\\github\\pathfindingvisualizer\\src\\index.js":"1","D:\\github\\pathfindingvisualizer\\src\\App.js":"2","D:\\github\\pathfindingvisualizer\\src\\reportWebVitals.js":"3","D:\\github\\pathfindingvisualizer\\src\\PathFindingVisualizer\\PathFindingVisualizer.jsx":"4","D:\\github\\pathfindingvisualizer\\src\\PathFindingVisualizer\\Algorithms\\Dijkstra.jsx":"5","D:\\github\\pathfindingvisualizer\\src\\PathFindingVisualizer\\Node\\Node.jsx":"6","D:\\github\\pathfindingvisualizer\\src\\PathFindingVisualizer\\Algorithms\\DFS.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":248,"mtime":1611490864451,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":12531,"mtime":1611496516786,"results":"12","hashOfConfig":"9"},{"size":2128,"mtime":1611489266371,"results":"13","hashOfConfig":"9"},{"size":918,"mtime":1611489488029,"results":"14","hashOfConfig":"9"},{"size":1176,"mtime":1611496133366,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"iwya6o",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":18,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":9,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":8,"source":null},"D:\\github\\pathfindingvisualizer\\src\\index.js",[],["33","34"],"D:\\github\\pathfindingvisualizer\\src\\App.js",[],"D:\\github\\pathfindingvisualizer\\src\\reportWebVitals.js",[],"D:\\github\\pathfindingvisualizer\\src\\PathFindingVisualizer\\PathFindingVisualizer.jsx",["35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53"],"D:\\github\\pathfindingvisualizer\\src\\PathFindingVisualizer\\Algorithms\\Dijkstra.jsx",["54","55","56","57","58","59","60","61","62"],"export function dijkstra (grid, startNode, finishNode){\r\n\r\n    const visitedNodesInOrder = [];\r\n    startNode.distance = 0;\r\n    const unvisitedNodes = getAllNodes(grid); \r\n    while (!!unvisitedNodes.length){\r\n\r\n        sortNodesByDistance (unvisitedNodes);\r\n        const closestNode = unvisitedNodes. shift();\r\n        if (closestNode.isWall) continue; \r\n        if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n        closestNode.isVisited = true;\r\n        visitedNodesInOrder.push(closestNode);\r\n        if (closestNode === finishNode) return visitedNodesInOrder;\r\n        updateUnvisitedNeighbour (grid, closestNode);\r\n\r\n    }\r\n}\r\n\r\nfunction getAllNodes (grid) {\r\n\r\n    const nodes = []; \r\n    for (const row of grid) {\r\n        for (const node of row) {\r\n            nodes.push (node);\r\n        }\r\n    }\r\n    return nodes;\r\n}\r\n\r\nfunction sortNodesByDistance (unvisitedNodes) { \r\n    unvisitedNodes. sort ((nodeA, nodeB) => nodeA.distance - nodeB. distance);\r\n    }\r\n    \r\nfunction updateUnvisitedNeighbour (grid, closestNode) {\r\n    \r\n    const neighbours = [];\r\n    const row = closestNode. row;\r\n    const col = closestNode.col;\r\n\r\n    if (row > 0) neighbours.push(grid[row - 1][col]); \r\n    if (row < grid.length - 1) neighbours.push (grid[row + 1] [col]);\r\n    if (col > 0) neighbours.push (grid[row][col - 1]);\r\n    if (col < grid[0] .length - 1) neighbours. push (grid[row] [col + 1]);\r\n    const unvisitedNeighbour = neighbours.filter (neighbour => !neighbour.isVisited) \r\n    for (const neighbour of unvisitedNeighbour) {    \r\n        neighbour.distance = closestNode.distance + 1;\r\n        neighbour.previousNode = closestNode;\r\n    }\r\n}\r\n\r\nexport function getNodesInShortestPathOrder (startNode, finishNode){\r\n    const nodesInShortestPathOrder = [];\r\n    let currentNode = finishNode;\r\n    console.log (startNode. previousNode);\r\n    while (currentNode!=null) {\r\n        nodesInShortestPathOrder.unshift (currentNode); \r\n        currentNode = currentNode.previousNode;\r\n    }\r\n    console.log (\"nodes in Shortest Path\" + nodesInShortestPathOrder);\r\n    return nodesInShortestPathOrder;\r\n}\r\n","D:\\github\\pathfindingvisualizer\\src\\PathFindingVisualizer\\Node\\Node.jsx",["63","64"],"import React, { Component } from 'react';\r\nimport './Node.css';\r\n\r\nexport default class Node extends Component{\r\n\r\nrender () {\r\n\r\nconst { row, col, isFinish, isStart, isVisitedAnimation, isShortestAnimation, isWall, onMouseDown, onMouseEnter, onMouseUp, heuristicDist, distAstar} = this.props;\r\nconst extraclassName = isFinish\r\n    ? 'Node-finish'\r\n    :isStart\r\n        ? 'Node-start'\r\n        : isVisitedAnimation\r\n            ? 'Node-visited'\r\n            : isShortestAnimation\r\n                ? 'Node-shortest' \r\n                : isWall\r\n                    ?'Node-wall'\r\n                    :'';\r\n            return <div className={ `Node ${extraclassName}`} \r\n                onMouseDown={ () => onMouseDown (row, col)} \r\n                onMouseEnter={() => onMouseEnter(row, col)} \r\n                onMouseUp={ () => onMouseUp () }> </div >;\r\n}\r\n}\r\n\r\nexport const DEFAULT_NODE = {\r\n    row:0,\r\n    col:0,\r\n}\r\n","D:\\github\\pathfindingvisualizer\\src\\PathFindingVisualizer\\Algorithms\\DFS.jsx",["65","66","67","68","69","70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":43,"column":29,"nodeType":"79","messageId":"80","endLine":43,"endColumn":40,"fix":"81"},{"ruleId":"77","severity":1,"message":"82","line":43,"column":62,"nodeType":"79","messageId":"80","endLine":43,"endColumn":102,"fix":"83"},{"ruleId":"77","severity":1,"message":"82","line":52,"column":17,"nodeType":"79","messageId":"80","endLine":52,"endColumn":57,"fix":"84"},{"ruleId":"77","severity":1,"message":"85","line":70,"column":29,"nodeType":"79","messageId":"80","endLine":70,"endColumn":71,"fix":"86"},{"ruleId":"77","severity":1,"message":"85","line":78,"column":17,"nodeType":"79","messageId":"80","endLine":78,"endColumn":59,"fix":"87"},{"ruleId":"88","severity":1,"message":"89","line":92,"column":39,"nodeType":"90","messageId":"91","endLine":92,"endColumn":41},{"ruleId":"77","severity":1,"message":"78","line":94,"column":29,"nodeType":"79","messageId":"80","endLine":94,"endColumn":40,"fix":"92"},{"ruleId":"77","severity":1,"message":"93","line":95,"column":26,"nodeType":"79","messageId":"80","endLine":95,"endColumn":44,"fix":"94"},{"ruleId":"77","severity":1,"message":"78","line":130,"column":25,"nodeType":"79","messageId":"80","endLine":130,"endColumn":36,"fix":"95"},{"ruleId":"77","severity":1,"message":"93","line":131,"column":22,"nodeType":"79","messageId":"80","endLine":131,"endColumn":40,"fix":"96"},{"ruleId":"77","severity":1,"message":"93","line":136,"column":13,"nodeType":"79","messageId":"80","endLine":136,"endColumn":31,"fix":"97"},{"ruleId":"77","severity":1,"message":"82","line":174,"column":27,"nodeType":"79","messageId":"80","endLine":174,"endColumn":64,"fix":"98"},{"ruleId":"77","severity":1,"message":"85","line":175,"column":28,"nodeType":"79","messageId":"80","endLine":175,"endColumn":67,"fix":"99"},{"ruleId":"77","severity":1,"message":"82","line":191,"column":27,"nodeType":"79","messageId":"80","endLine":191,"endColumn":64,"fix":"100"},{"ruleId":"77","severity":1,"message":"85","line":192,"column":28,"nodeType":"79","messageId":"80","endLine":192,"endColumn":68,"fix":"101"},{"ruleId":"77","severity":1,"message":"102","line":192,"column":28,"nodeType":"79","messageId":"80","endLine":192,"endColumn":50,"fix":"103"},{"ruleId":"77","severity":1,"message":"85","line":244,"column":28,"nodeType":"79","messageId":"80","endLine":244,"endColumn":67,"fix":"104"},{"ruleId":"77","severity":1,"message":"105","line":248,"column":23,"nodeType":"79","messageId":"80","endLine":248,"endColumn":33,"fix":"106"},{"ruleId":"77","severity":1,"message":"107","line":249,"column":35,"nodeType":"79","messageId":"80","endLine":249,"endColumn":45,"fix":"108"},{"ruleId":"77","severity":1,"message":"109","line":9,"column":29,"nodeType":"79","messageId":"80","endLine":9,"endColumn":50,"fix":"110"},{"ruleId":"77","severity":1,"message":"111","line":32,"column":5,"nodeType":"79","messageId":"80","endLine":32,"endColumn":25,"fix":"112"},{"ruleId":"77","severity":1,"message":"113","line":32,"column":62,"nodeType":"79","messageId":"80","endLine":32,"endColumn":77,"fix":"114"},{"ruleId":"77","severity":1,"message":"115","line":38,"column":17,"nodeType":"79","messageId":"80","endLine":38,"endColumn":33,"fix":"116"},{"ruleId":"77","severity":1,"message":"93","line":42,"column":49,"nodeType":"79","messageId":"80","endLine":42,"endColumn":68,"fix":"117"},{"ruleId":"77","severity":1,"message":"118","line":44,"column":15,"nodeType":"79","messageId":"80","endLine":44,"endColumn":30,"fix":"119"},{"ruleId":"77","severity":1,"message":"120","line":44,"column":36,"nodeType":"79","messageId":"80","endLine":44,"endColumn":52,"fix":"121"},{"ruleId":"77","severity":1,"message":"122","line":44,"column":54,"nodeType":"79","messageId":"80","endLine":44,"endColumn":73,"fix":"123"},{"ruleId":"77","severity":1,"message":"124","line":55,"column":18,"nodeType":"79","messageId":"80","endLine":55,"endColumn":41,"fix":"125"},{"ruleId":"126","severity":1,"message":"127","line":8,"column":125,"nodeType":"128","messageId":"129","endLine":8,"endColumn":138},{"ruleId":"126","severity":1,"message":"130","line":8,"column":140,"nodeType":"128","messageId":"129","endLine":8,"endColumn":149},{"ruleId":"77","severity":1,"message":"93","line":19,"column":21,"nodeType":"79","messageId":"80","endLine":19,"endColumn":40,"fix":"131"},{"ruleId":"77","severity":1,"message":"93","line":19,"column":52,"nodeType":"79","messageId":"80","endLine":19,"endColumn":71,"fix":"132"},{"ruleId":"77","severity":1,"message":"93","line":19,"column":106,"nodeType":"79","messageId":"80","endLine":19,"endColumn":125,"fix":"133"},{"ruleId":"77","severity":1,"message":"93","line":21,"column":35,"nodeType":"79","messageId":"80","endLine":21,"endColumn":54,"fix":"134"},{"ruleId":"77","severity":1,"message":"93","line":21,"column":119,"nodeType":"79","messageId":"80","endLine":21,"endColumn":138,"fix":"135"},{"ruleId":"77","severity":1,"message":"136","line":22,"column":38,"nodeType":"79","messageId":"80","endLine":22,"endColumn":64,"fix":"137"},{"ruleId":"77","severity":1,"message":"138","line":22,"column":69,"nodeType":"79","messageId":"80","endLine":22,"endColumn":98,"fix":"139"},{"ruleId":"77","severity":1,"message":"122","line":22,"column":123,"nodeType":"79","messageId":"80","endLine":22,"endColumn":142,"fix":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-whitespace-before-property","Unexpected whitespace before property slice.","MemberExpression","unexpectedWhitespace",{"range":"143","text":"144"},"Unexpected whitespace before property START_NODE_COL.",{"range":"145","text":"146"},{"range":"147","text":"146"},"Unexpected whitespace before property FINISH_NODE_COL.",{"range":"148","text":"146"},{"range":"149","text":"146"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"150","text":"144"},"Unexpected whitespace before property col.",{"range":"151","text":"146"},{"range":"152","text":"144"},{"range":"153","text":"146"},{"range":"154","text":"146"},{"range":"155","text":"146"},{"range":"156","text":"146"},{"range":"157","text":"146"},{"range":"158","text":"146"},"Unexpected whitespace before property FINISH_NODE_ROW.",{"range":"159","text":"146"},{"range":"160","text":"146"},"Unexpected whitespace before property 0.",{"range":"161","text":"146"},"Unexpected whitespace before property 1.",{"range":"162","text":"146"},"Unexpected whitespace before property shift.",{"range":"163","text":"144"},"Unexpected whitespace before property sort.",{"range":"164","text":"144"},"Unexpected whitespace before property distance.",{"range":"165","text":"144"},"Unexpected whitespace before property row.",{"range":"166","text":"144"},{"range":"167","text":"146"},"Unexpected whitespace before property length.",{"range":"168","text":"144"},"Unexpected whitespace before property push.",{"range":"169","text":"144"},"Unexpected whitespace before property col + 1.",{"range":"170","text":"146"},"Unexpected whitespace before property previousNode.",{"range":"171","text":"144"},"no-unused-vars","'heuristicDist' is assigned a value but never used.","Identifier","unusedVar","'distAstar' is assigned a value but never used.",{"range":"172","text":"146"},{"range":"173","text":"146"},{"range":"174","text":"146"},{"range":"175","text":"146"},{"range":"176","text":"146"},"Unexpected whitespace before property isWall.",{"range":"177","text":"144"},"Unexpected whitespace before property isVisited.",{"range":"178","text":"144"},{"range":"179","text":"146"},"no-global-assign","no-unsafe-negation",[976,978],".",[1028,1029],"",[1261,1262],[1924,1925],[2147,2148],[2785,2787],[2834,2835],[3822,3824],[3869,3870],[4006,4007],[5143,5144],[5212,5213],[5785,5786],[5854,5855],[5836,5837],[7506,7507],[7710,7711],[7757,7758],[302,304],[924,926],[972,974],[1117,1119],[1278,1279],[1365,1367],[1389,1391],[1406,1407],[1850,1852],[521,522],[552,553],[606,607],[842,843],[926,927],[1017,1019],[1048,1050],[1093,1094]]